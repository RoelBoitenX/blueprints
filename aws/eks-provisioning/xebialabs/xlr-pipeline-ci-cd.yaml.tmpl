{{$app := .AppName | kebabcase}}
apiVersion: xl-release/v1
kind: Templates
spec:
- name: {{$app}}
  type: xlrelease.Folder
  children:
  - name: {{$app}}-ci-cd
    type: xlrelease.Release
    description: |
      This XL Release template shows how to deploy an application, based on microservices architecture, to AWS EKS using XL Deploy.
#    releaseTriggers:
#      - name: Destroy EKS EFS schedule
#        type: time.Schedule
#        releaseTitle: Destroy EKS EFS schedule
#        periodicity: 0 0 7 ? * MON,TUE,WED,THU,FRI *
#        triggerTime: ${abcTest}
    tags:
    - AWS
    - EKS
    - {{$app}}     
#    scriptUsername: !value XL_RELEASE_USERNAME
#    scriptUserPassword: !value XL_RELEASE_PASSWORD
    variables:     
    - key: AWSaccessKey
      type: xlrelease.StringVariable
      requiresValue: true
      showOnReleaseStart: false
      value: {{.AWSAccessKey}}
    - key: AWSaccessSecret
      type: xlrelease.StringVariable
      requiresValue: true
      showOnReleaseStart: false
      value: {{.AWSAccessSecret}}
    - key: AWSRegion
      type: xlrelease.StringVariable
      requiresValue: true
      showOnReleaseStart: false
      value: {{.AWSRegion}}
    - type: xlrelease.StringVariable
      key: efs
      requiresValue: false
      showOnReleaseStart: false
    - type: xlrelease.StringVariable
      key: eksEndpoint
      requiresValue: false
      showOnReleaseStart: false
    - type: xlrelease.StringVariable
      key: eksClusterName
      requiresValue: false
      showOnReleaseStart: false      
    phases:
    # Provision Infra
    - name: Provision Infrastructure
      color: '#ff9e3b'
      type: xlrelease.Phase
      tasks:
      - name: Provision AWS VPC
        type: xlrelease.ParallelGroup
        tasks:
        - name: Provision AWS VPC
          type: xldeploy.Deploy
          server: {{.XLDServer}}
          deploymentPackage: {{$app}}/EKS-CLOUDFORMATION/{{$app}}-cloudformation-eks-vpc/1.0.0
          deploymentEnvironment: Environments/{{$app}}/aws-cloudformation-{{$app}}
      - name: Provision AWS EKS cluster
        type: xlrelease.SequentialGroup
        tasks:
        - name: Provision EKS master node
          type: xldeploy.Deploy
          server: {{.XLDServer}}
          deploymentPackage: {{$app}}/EKS-CLOUDFORMATION/{{$app}}-cloudformation-eks-master/1.0.0
          deploymentEnvironment: Environments/{{$app}}/aws-cloudformation-{{$app}}
        - name: Provision EKS workers nodes
          type: xldeploy.Deploy
          server: {{.XLDServer}}
          deploymentPackage: {{$app}}/EKS-CLOUDFORMATION/{{$app}}-cloudformation-eks-workers/1.0.0
          deploymentEnvironment: Environments/{{$app}}/aws-cloudformation-{{$app}}
        - name: Provision EKS config map for workers
          type: xldeploy.Deploy
          server: {{.XLDServer}}
          deploymentPackage: {{$app}}/EKS-CLOUDFORMATION/{{$app}}-k8s-configmap/1.0.0
          deploymentEnvironment: Environments/{{$app}}/aws-eks-{{$app}}-kube-system
      - name: Provision AWS EFS
        type: xlrelease.SequentialGroup
        tasks:
          - name: Provision EFS
            type: xldeploy.Deploy
            server: {{.XLDServer}}
            deploymentPackage: {{$app}}/EKS-CLOUDFORMATION/{{$app}}-cloudformation-efs/1.0.0
            deploymentEnvironment: Environments/{{$app}}/aws-cloudformation-{{$app}}
      - name: Get EFS ID
        type: xld.GetCIMapPropertyKey
        server: {{.XLDServer}
        ciID: Infrastructure/{{$app}}/aws-{{$app}}/eks-cloudformation/{{$app}}-efs
        ciPropertyName: outputVariables
        ciPropertyNameKey: Filesystem
        variableMapping:
          pythonScript.ciPropertyValue: ${efs}
      - name: Get EKS Cluster name
        type: xld.GetCIMapPropertyKey
        server: {{.XLDServer}
        ciID: Infrastructure/{{$app}}/aws-{{$app}}/eks-cloudformation/{{$app}}-eks-master
        ciPropertyName: outputVariables
        ciPropertyNameKey: ClusterName
        variableMapping:
          pythonScript.ciPropertyValue: ${eksClusterName}
      - name: Get EKS Endpoint
        type: xld.GetCIMapPropertyKey
        server: {{.XLDServer}
        ciID: Infrastructure/{{$app}}/aws-{{$app}}/eks-cloudformation/{{$app}}-eks-master
        ciPropertyName: outputVariables
        ciPropertyNameKey: ClusterEndpoint
        variableMapping:
          pythonScript.ciPropertyValue: ${eksEndpoint}
      - name: Send slack notification
        type: slack.Notification
        server: {{.SlackServer}}
        message: 'AWS region: ${AWSRegion};     EFS ID: ${efs};     EKS endpoint: ${eksEndpoint}     ; EKS cluster name: ${eksClusterName}'
        ^title: "EFK EFS has been provisioned"
        titleLink: ${release.url}
        color: good