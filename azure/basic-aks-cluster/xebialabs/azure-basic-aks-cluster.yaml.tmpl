{{$clusterName := .ClusterName | kebabcase}}

apiVersion: xl-deploy/v1
kind: Infrastructure
spec:
- name: terraform-host
  type: overthere.LocalHost
  os: UNIX
  children:
  - name: terraform-client
    type: terraform.TerraformClient
    path: '/usr/local/bin'
    workingDirectory: '/tmp/{{$clusterName}}'

---

apiVersion: xl-deploy/v1
kind: Environments
spec:
- name: terraform
  type: udm.Environment
  members:
  - ~Infrastructure/terraform-host/terraform-client

---

apiVersion: xl-deploy/v1
kind: Applications
spec:
- name: basic-aks-cluster-terraform-for-{{$clusterName}}
  type: udm.Application
  children:
  - name: '1.0.0'
    type: udm.DeploymentPackage
    deployables:
      - name: terraform-module
        type: terraform.Module
        file: !file ../terraform
        inputVariables:
          cluster_name: {{$clusterName}}
          subscription_id: {{.SubscriptionID}}
          client_id: {{.ClientID}}
          client_secret: {{.ClientSecret}}
          tenant_id: {{.TenantID}}
          resource_group: {{.ResourceGroup}}
          resource_group_location: {{.ResourceGroupLocation}}
        boundTemplates:
        - "../{{$clusterName}} infrastructure"
        - "../{{$clusterName}} environment"
    templates:
    - name: "{{$clusterName}} infrastructure"
      type: template.k8s.Master
      instanceName: {{$clusterName}}
      apiServerURL: '{{"{{%outputVariables.host%}}"}}'
      token: '{{"{{%outputVariables.token%}}"}}'
      skipTLS: true
      children:
      - name: default
        type: template.k8s.Namespace
    - name: "{{$clusterName}} environment"
      type: template.udm.Environment
      instanceName: {{$clusterName}}
      members:
      - "../{{$clusterName}} infrastructure"
      - "../{{$clusterName}} infrastructure/default"
